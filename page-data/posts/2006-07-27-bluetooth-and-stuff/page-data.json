{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/posts/2006-07-27-bluetooth-and-stuff","webpackCompilationHash":"8d908ede69ed6f3b9999","result":{"data":{"site":{"siteMetadata":{"title":"Excursion in Distraction","author":"@dsvensson"}},"markdownRemark":{"html":"<p>I’ve started my voyage into bluetooth land now and it has been some confusing days.</p>\n<p>I spent about three hours on google just to find out that you couldn’t connect to localhost with bluetooth. This means I have to do some of the work correctly the first time instead (or debug the application on the phone, bleh). About 10 minutes later I luckily found out that it was possible to write the Service Discovery part against localhost by using the address <code class=\"language-text\">0xFFFFFF000000</code>. Then I went on to figure out how this <a href=\"http://en.wikipedia.org/wiki/UUID\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">UUID</a>-stuff worked and now I can actually discover my <em>“XMMS2 Remote Control”</em> service from my phone. Yey! I used <a href=\"https://web.archive.org/web/20060720184638/http://sourceforge.net/projects/avetanabt/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AvetanaBT</a> to implement this part. It is a JSR-82 compatible java framework that runs on J2SE.</p>\n<p>Today I’ve been learning about <a href=\"https://web.archive.org/web/20060705075105/http://developer.gnome.org/doc/API/2.0/glib/glib-IO-Channels.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GIOChannels</a> and refreshing my UNIX socket programming knowledge. I realized that I could write quite a bit locally by writing a J2ME compatible Java Client that connects over TCP to a test server. I’ve given up on extending <a href=\"https://web.archive.org/web/20060314091451/http://bemused.sourceforge.net/book/view/44\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Bemused’s protocol</a> as it doesn’t fit my needs at all. So this evening/night have also been used to figure out what the protocol should look like, and a some minutes ago I compiled the first working version that communicates integers and strings.</p>\n<p>Requesting the playlist for example looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">Client -> Server : CMD_PLAYLIST_LIST, CMD_END\n\nServer -> Client : ANS_PLAYLIST_LIST, size, UINT, 1, UINT, 2, UINT, 3, ANS_END</code></pre></div>\n<p>I will probably not document this protocol as I intend to write the server as platform independent as possible. It currently runs on Linux, but with some minor changes it also compiles on FreeBSD. The bluetooth connection will be abstracted so that it can be replaced by TCP if someone cares to write such a module, or perhaps diffrent bluetooth apis (OS X, Wintendo). And maybe the player communication will be abstracted so that any music player with similar features (playback, playlist, medialib) can benefit from this project by adding a corresponding module.</p>","fields":{"slug":"posts/2006-07-27-bluetooth-and-stuff","readingTime":{"text":"2 min read"}},"frontmatter":{"title":"Bluetooth and stuff","date":"27 Jul '06"}},"headerImage":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='400' height='27'%3e%3cpath d='M2 1L1 13l-1 6c0 4 0 4 3 4 2 0 2 0 1 1H1l-1 1c0 2 3 2 15 2h14v-5c0-5-1-6-3-4v3c0 1-2 2-5 2l-4 1-2 1-2-1c0-2 6-4 9-4 3 1 3-1-1-2-3 0-1-2 4-2 3 0 4-1 4-3l-1-3H16C5 10 5 10 5 3c0-3-2-4-3-2m32 13v13h9c7 0 9 0 9-2 0 0-1-2-3-2-3-1-3-1-2-8V9h-3l-4 1V5c0-5 0-5-3-5h-2l-1 14m20-2v11h4c3 0 4 0 5 2 0 2 1 2 14 2 16 0 15 1 15-11 0-8 1-12 3-12l1 10c0 6 0 9 1 8 1-2 1-2 1 0 1 1 1 2 2 1l2 1 1 2V4c0-3-1-4-6-4-6 0-6 0-5 2 0 4-8 7-20 7h-9V0h-9v12m57-5c-1 8 0 14 4 17v1l-2 1 14 1 14-1h2l10 1c11 0 11 1 11-22V0l-2 3-2 4c1 1 0 1-3 1l-7 1-5-1c-3-3-2-5 1-5l3-1h-3l-3-1-2-1-1 1c1 0-1 3-3 3l-3-2c-3-2-4-2-9-2h-11c-3 0-3 0-3 7m68-4c0 3 0 3 2 1 0-1 2-2 3-1 1 0 1 1-1 3-2 1-2 2-1 2v1l-1 3c0 1-1 2-2 1v6c0 1 1 2 5 2 7 2 8 2 2 2l-6 1h2l3 1c0 1 2 2 10 2 9 0 10 0 10-2 0-1 1-2 3-2h3V0h-33l1 3m36-2c-2 2 0 26 1 26v-1c0-2 1-2 3 0l9 1h8l-2-3-1-2c1-1-6-14-7-13-2 1-5-1-5-5-1-3-1-3-2-1l-1 3V3c0-2-2-4-3-2m99 0c-1 2 3 8 5 9v3l-1-1-2-1 1 2v2c-2 1-2 1-2-1s0-2-1-1h-2l-1 2 1 2 1-1h1l-1 2-1 3-2-3c-2-2-7-2-5 0h2l1 1-3 1c-2 0-2 0-2 2l1 3c0 2 1 2 48 2h48V15c0-10 0-11-2-11-1 0-2 0-2-2 0-3-9-3-11 0v2h-1l-1 1c-1 1-1 0-1-2 1-4-1-4-2 0 0 2-1 2-1 1V2c0-2 0-2-1-1l-2 1c1 4-1 6-4 5-4 0-6-2-3-2 2 0 2 0 1-1-2 0-2-1-1-2l2 1c0 2 1 1 3-1 1-2 0-2-3-2l-7 2c-2 1-2 2-1 2h2l-2 1-2 2 2 1c2-1 4 0 4 2l-5 1-6 1h-1l2-2 1-2-2-4V0h-9c-9 0-10 0-10 2l-1 3V2c0-2-1-2-3-2l-3 1h-2c-2-1-7-1-7 1l1 1v1c0 2-2 0-2-2s-5-3-6-1m-44 7l-1 1c-1-1-1 1-1 3 0 4 0 4-1 1 0-3-1-3-5-4l-6-1c-1 0-1 4 1 10l2 6c1 3 1 3 11 3 7 0 9 0 9-2v-3l-2-2-2-5-3-5c-1-4-2-5-2-2' fill='%23d3d3d3' fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":14.867924528301886,"src":"/static/843c5f7defd25c41f8cae57182fd6f1f/1bdc6/wastelands-header.jpg","srcSet":"/static/843c5f7defd25c41f8cae57182fd6f1f/accda/wastelands-header.jpg 200w,\n/static/843c5f7defd25c41f8cae57182fd6f1f/fc61b/wastelands-header.jpg 400w,\n/static/843c5f7defd25c41f8cae57182fd6f1f/1bdc6/wastelands-header.jpg 800w,\n/static/843c5f7defd25c41f8cae57182fd6f1f/34bdc/wastelands-header.jpg 1200w,\n/static/843c5f7defd25c41f8cae57182fd6f1f/bdccb/wastelands-header.jpg 1600w,\n/static/843c5f7defd25c41f8cae57182fd6f1f/0ffcb/wastelands-header.jpg 3940w","sizes":"(max-width: 800px) 100vw, 800px"}}},"indexImage":null},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"posts/2006-07-27-bluetooth-and-stuff","previous":{"fields":{"slug":"posts/2006-07-24-new-phone"},"frontmatter":{"title":"New phone!"}},"next":{"fields":{"slug":"posts/2006-09-30-romanesco"},"frontmatter":{"title":"Romanesco"}}}}}